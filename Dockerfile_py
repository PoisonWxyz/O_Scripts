FROM alpine
LABEL maintainer="poisonw" \
           VERSION=0.0.1
CMD ["/bin/sh"]
ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    LANG=C.UTF-8 \
    PYTHON_PIP_VERSION=21.0.1 \
    PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/b60e2320d9e8d02348525bd74e871e466afdf77c/get-pip.py \
    PYTHON_GET_PIP_SHA256=c3b81e5d06371e135fb3156dc7d8fd6270735088428c4a9a5ec1f342e2024565 \
    PW_DIR=/home \
          SHELL=/bin/bash \
    PS1="\u@\h:\w\$" \
WORKDIR=${PW_DIR}//scripts
RUN /bin/sh -c set -ex \
    && apk add --no-cache --virtual .fetch-deps gnupg tar xz \
    && wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" \
    && wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" \
    && export GNUPGHOME="$(mktemp -d)" \
    && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \
    && gpg --batch --verify python.tar.xz.asc python.tar.xz \
    && { command -v gpgconf > /dev/null     && gpgconf --kill all || :; } \
    && rm -rf "$GNUPGHOME" python.tar.xz.asc \
    && mkdir -p /usr/src/python \
    && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
    && rm python.tar.xz \
    && apk add --no-cache --virtual .build-deps \
                             bluez-dev \
                             bzip2-dev \
                             coreutils \
                             pkg-dev dpkg \
                             xpat-dev \
                             findutils \
                             cc \
                             gdbm-dev \
                             libc-dev \
                             libffi-dev \
                             libnsl-dev \
                             libtirpc-dev \
                             linux-headers \
                             make \
                             ncurses-dev \
                             openssl-dev \
                             pax-utils \
                             readline-dev \
                             sqlite-dev \
                             tcl-dev \
                             tk \
                             tk-dev \
                             util-linux-dev \
                             xz-dev \
                             zlib-dev \
    && apk del --no-network .fetch-deps \
    && mkdir -p env logs Scripts/jd Shell Scripts/oth Scripts/python \
    && cd /usr/src/python \
    && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
    && ./configure  --build="$gnuArch"  --enable-loadable-sqlite-extensions  --enable-optimizations  --enable-option-checking=fatal --enable-shared --with-system-expat --with-system-ffi --without-ensurepip \
    && make -j "$(nproc)" EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000" \LDFLAGS="-Wl,--strip-all" \
    && make install \
    && rm -rf /usr/src/python \
    && find /usr/local -depth \( \( -type d -a \( -name test -o -name tests -o -name idle_test \) \) -o \( -type f -a \( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \) \) \) -exec rm -rf '{}' + \
    && find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' | tr ',' '\n' | sort -u | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' | xargs -rt apk add --no-cache --virtual .python-rundeps \
    && apk del --no-network .build-deps \
    && python3 --version \
    && cd /usr/local/bin \
    && ln -s idle3 idle \
    && ln -s pydoc3 pydoc \
    && ln -s python3 python \
    && ln -s python3-config python-config\
RUN /bin/sh -c set -ex; wget -O get-pip.py "$PYTHON_GET_PIP_URL"; echo "$PYTHON_GET_PIP_SHA256 *get-pip.py" | sha256sum -c -; python get-pip.py --disable-pip-version-check --no-cache-dir "pip==$PYTHON_PIP_VERSION" ; pip --version; find /usr/local -depth \( \( -type d -a \( -name test -o -name tests -o -name idle_test \) \) -o \( -type f -a \( -name '*.pyc' -o -name '*.pyo' \) \) \) -exec rm -rf '{}' +; rm -f get-pip.py \
    && python -m pip install --upgrade pip \
    && pip install telethon requests pysocks httpx pyyaml datetime \
    && yarn global add pm2
CMD ["python3"]
